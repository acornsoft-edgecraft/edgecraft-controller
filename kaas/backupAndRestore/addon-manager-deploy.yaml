apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
    control-plane: controller-manager
  name: caaph-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: caaph-system/caaph-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: helm
  name: helmchartproxies.addons.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: caaph-webhook-service
          namespace: caaph-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: addons.cluster.x-k8s.io
  names:
    kind: HelmChartProxy
    listKind: HelmChartProxyList
    plural: helmchartproxies
    shortNames:
      - hcp
    singular: helmchartproxy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].message
          name: Message
          priority: 1
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: HelmChartProxy is the Schema for the helmchartproxies API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartProxySpec defines the desired state of HelmChartProxy.
              properties:
                chartName:
                  description: ChartName is the name of the Helm chart in the repository.
                  type: string
                clusterSelector:
                  description:
                    ClusterSelector selects Clusters in the same namespace
                    with a label that matches the specified label selector. The Helm
                    chart will be installed on all selected Clusters. If a Cluster is
                    no longer selected, the Helm release will be uninstalled.
                  properties:
                    matchExpressions:
                      description:
                        matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description:
                          A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the key
                          and values.
                        properties:
                          key:
                            description:
                              key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description:
                              operator represents a key's relationship to
                              a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description:
                              values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description:
                        matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                namespace:
                  description:
                    ReleaseNamespace is the namespace the Helm release will
                    be installed on each selected Cluster. If it is not specified, it
                    will be set to the default namespace.
                  type: string
                releaseName:
                  description:
                    ReleaseName is the release name of the installed Helm
                    chart. If it is not specified, a name will be generated.
                  type: string
                repoURL:
                  description: RepoURL is the URL of the Helm chart repository.
                  type: string
                valuesTemplate:
                  description:
                    ValuesTemplate is an inline YAML representing the values
                    for the Helm chart. This YAML supports Go templating to reference
                    fields from each selected workload Cluster and programatically create
                    and set values.
                  type: string
                version:
                  description:
                    Version is the version of the Helm chart. If it is not
                    specified, the chart will use and be kept up to date with the latest
                    version.
                  type: string
              required:
                - chartName
                - clusterSelector
                - repoURL
              type: object
            status:
              description: HelmChartProxyStatus defines the observed state of HelmChartProxy.
              properties:
                conditions:
                  description: Conditions defines current state of the HelmChartProxy.
                  items:
                    description:
                      Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description:
                          Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description:
                          The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description:
                          Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description:
                          Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                matchingClusters:
                  description:
                    MatchingClusters is the list of references to Clusters
                    selected by the ClusterSelector.
                  items:
                    description:
                      "ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many fields
                      which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2. Invalid
                      usage help.  It is impossible to add specific help for individual
                      usage.  In most embedded usages, there are particular restrictions
                      like, \"must refer only to types A and B\" or \"UID not honored\"
                      or \"name must be restricted\". Those cannot be well described
                      when embedded. 3. Inconsistent validation.  Because the usages
                      are different, the validation rules are different by usage, which
                      makes it hard for users to predict what will happen. 4. The fields
                      are both imprecise and overly precise.  Kind is not a precise
                      mapping to a URL. This can produce ambiguity during interpretation
                      and require a REST mapping.  In most cases, the dependency is
                      on the group,resource tuple and the version of the actual struct
                      is irrelevant. 5. We cannot easily change it.  Because this type
                      is embedded in many locations, updates to this type will affect
                      numerous schemas.  Don't make new APIs embed an underspecified
                      API type they do not control. \n Instead of using this type, create
                      a locally provided and used type that is well-focused on your
                      reference. For example, ServiceReferences for admission registration:
                      https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      ."
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description:
                          'If referring to a piece of an object instead of
                          an entire object, this string should contain a valid JSON/Go
                          field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part of
                          an object. TODO: this design is not final and this field is
                          subject to change in the future.'
                        type: string
                      kind:
                        description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                        type: string
                      name:
                        description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                        type: string
                      namespace:
                        description: "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                        type: string
                      resourceVersion:
                        description:
                          "Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                        type: string
                      uid:
                        description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: caaph-system/caaph-serving-cert
    controller-gen.kubebuilder.io/version: v0.10.0
  labels:
    cluster.x-k8s.io/provider: helm
  name: helmreleaseproxies.addons.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: caaph-webhook-service
          namespace: caaph-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: addons.cluster.x-k8s.io
  names:
    kind: HelmReleaseProxy
    listKind: HelmReleaseProxyList
    plural: helmreleaseproxies
    shortNames:
      - hrp
    singular: helmreleaseproxy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this HelmReleaseProxy belongs
          jsonPath: .spec.clusterRef.name
          name: Cluster
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].message
          name: Message
          priority: 1
          type: string
        - jsonPath: .status.status
          name: Status
          type: string
        - jsonPath: .status.revision
          name: Revision
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: HelmReleaseProxy is the Schema for the helmreleaseproxies API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseProxySpec defines the desired state of HelmReleaseProxy.
              properties:
                chartName:
                  description: ChartName is the name of the Helm chart in the repository.
                  type: string
                clusterRef:
                  description:
                    ClusterRef is a reference to the Cluster to install the
                    Helm release on.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description:
                        'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      type: string
                    name:
                      description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                      type: string
                    namespace:
                      description: "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                      type: string
                    resourceVersion:
                      description:
                        "Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                      type: string
                    uid:
                      description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                namespace:
                  description:
                    ReleaseNamespace is the namespace the Helm release will
                    be installed on the referenced Cluster. If it is not specified,
                    it will be set to the default namespace.
                  type: string
                releaseName:
                  description:
                    ReleaseName is the release name of the installed Helm
                    chart. If it is not specified, a name will be generated.
                  type: string
                repoURL:
                  description: RepoURL is the URL of the Helm chart repository.
                  type: string
                values:
                  description:
                    Values is an inline YAML representing the values for
                    the Helm chart. This YAML is the result of the rendered Go templating
                    with the values from the referenced workload Cluster.
                  type: string
                version:
                  description:
                    Version is the version of the Helm chart. If it is not
                    specified, the chart will use and be kept up to date with the latest
                    version.
                  type: string
              required:
                - chartName
                - clusterRef
                - repoURL
              type: object
            status:
              description: HelmReleaseProxyStatus defines the observed state of HelmReleaseProxy.
              properties:
                conditions:
                  description: Conditions defines current state of the HelmReleaseProxy.
                  items:
                    description:
                      Condition defines an observation of a Cluster API resource
                      operational state.
                    properties:
                      lastTransitionTime:
                        description:
                          Last time the condition transitioned from one status
                          to another. This should be when the underlying condition changed.
                          If that is not known, then using the time when the API field
                          changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description:
                          A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description:
                          The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not this
                          field is considered a guaranteed API. This field may not be
                          empty.
                        type: string
                      severity:
                        description:
                          Severity provides an explicit classification of
                          Reason code, so the users or machines can immediately understand
                          the current situation and act accordingly. The Severity field
                          MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description:
                          Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important.
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                revision:
                  description: Revision is the current revision of the Helm release.
                  type: integer
                status:
                  description: Status is the current status of the Helm release.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-controller-manager
  namespace: caaph-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-leader-election-role
  namespace: caaph-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - addons.cluster.x-k8s.io
    resources:
      - helmchartproxies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - addons.cluster.x-k8s.io
    resources:
      - helmchartproxies/finalizers
    verbs:
      - update
  - apiGroups:
      - addons.cluster.x-k8s.io
    resources:
      - helmchartproxies/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - addons.cluster.x-k8s.io
    resources:
      - helmreleaseproxies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - addons.cluster.x-k8s.io
    resources:
      - helmreleaseproxies/finalizers
    verbs:
      - update
  - apiGroups:
      - addons.cluster.x-k8s.io
    resources:
      - helmreleaseproxies/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - watch
  - apiGroups:
      - bootstrap.cluster.x-k8s.io
      - clusterctl.cluster.x-k8s.io
      - controlplane.cluster.x-k8s.io
      - infrastructure.cluster.x-k8s.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - clusters
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - controlplane.cluster.x-k8s.io
    resources:
      - kubeadmcontrolplanes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-leader-election-rolebinding
  namespace: caaph-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: caaph-leader-election-role
subjects:
  - kind: ServiceAccount
    name: caaph-controller-manager
    namespace: caaph-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: caaph-manager-role
subjects:
  - kind: ServiceAccount
    name: caaph-controller-manager
    namespace: caaph-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: caaph-proxy-role
subjects:
  - kind: ServiceAccount
    name: caaph-controller-manager
    namespace: caaph-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 5a2dee3e.cluster.x-k8s.io
kind: ConfigMap
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-manager-config
  namespace: caaph-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
    control-plane: controller-manager
  name: caaph-controller-manager-metrics-service
  namespace: caaph-system
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    cluster.x-k8s.io/provider: helm
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-webhook-service
  namespace: caaph-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    cluster.x-k8s.io/provider: helm
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
    control-plane: controller-manager
  name: caaph-controller-manager
  namespace: caaph-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: helm
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        cluster.x-k8s.io/provider: helm
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --leader-elect
          image: docker.io/ccambo/cluster-api-helm-controller:dev
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      serviceAccountName: caaph-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-serving-cert
  namespace: caaph-system
spec:
  dnsNames:
    - caaph-webhook-service.caaph-system.svc
    - caaph-webhook-service.caaph-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: caaph-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-selfsigned-issuer
  namespace: caaph-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: caaph-system/caaph-serving-cert
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: caaph-webhook-service
        namespace: caaph-system
        path: /mutate-addons-cluster-x-k8s-io-v1alpha1-helmchartproxy
    failurePolicy: Fail
    name: helmchartproxy.kb.io
    rules:
      - apiGroups:
          - addons.cluster.x-k8s.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - helmchartproxies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: caaph-webhook-service
        namespace: caaph-system
        path: /mutate-addons-cluster-x-k8s-io-v1alpha1-helmreleaseproxy
    failurePolicy: Fail
    name: helmreleaseproxy.kb.io
    rules:
      - apiGroups:
          - addons.cluster.x-k8s.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - helmreleaseproxies
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: caaph-system/caaph-serving-cert
  labels:
    cluster.x-k8s.io/provider: helm
  name: caaph-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: caaph-webhook-service
        namespace: caaph-system
        path: /validate-addons-cluster-x-k8s-io-v1alpha1-helmchartproxy
    failurePolicy: Fail
    name: vhelmchartproxy.kb.io
    rules:
      - apiGroups:
          - addons.cluster.x-k8s.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - helmchartproxies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: caaph-webhook-service
        namespace: caaph-system
        path: /validate-addons-cluster-x-k8s-io-v1alpha1-helmreleaseproxy
    failurePolicy: Fail
    name: vhelmreleaseproxy.kb.io
    rules:
      - apiGroups:
          - addons.cluster.x-k8s.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - helmreleaseproxies
    sideEffects: None
